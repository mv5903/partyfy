generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model AskedQueues {
  id          Int    @id @default(autoincrement())
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  OwnerUserID String?   @db.VarChar
  RequestedAt DateTime? @db.Timestamp(6)
  SongID      String?   @db.VarChar
}

model Recents {
  id           Int    @id @default(autoincrement())
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  OwnerUserID  String?   @db.VarChar
  PlayedAt     DateTime? @db.Timestamp(6)
  SongID       String?   @db.VarChar
  SongName     String?   @db.VarChar
  SongArtist   String?   @db.VarChar
  SongAlbum    String?   @db.VarChar
  SongArt      String?   @db.VarChar
  SongExplicit Boolean?
}

model Users {
  id               Int    @id @default(autoincrement())
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  UserID           String?   @unique @db.VarChar
  RefreshToken     String?   @db.VarChar
  UnattendedQueues Boolean?
  Username         String?   @db.VarChar
  disableuqdate    DateTime?
  options          Json?     @db.Json
  last_login       DateTime? @db.Timestamptz(6)
}

model Friends {
  id              Int   @id @default(autoincrement())
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  UserID          String?  @db.VarChar
  FriendUserID    String?  @db.VarChar
  IsFriendRequest Boolean?
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model Announcements {
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id              Int   @id @default(autoincrement())
  session_id      String   @unique @default(uuid()) @db.VarChar
  user_id         String   @unique @db.VarChar
  created_date    DateTime @default(now()) @db.Timestamptz(6)
  expiration_date DateTime @db.Timestamptz(6)
}
